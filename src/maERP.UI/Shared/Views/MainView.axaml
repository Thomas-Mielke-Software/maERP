<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="clr-namespace:maERP.UI.Shared.ViewModels"
             xmlns:authVm="clr-namespace:maERP.UI.Features.Authentication.ViewModels"
             xmlns:authViews="clr-namespace:maERP.UI.Features.Authentication.Views"
             xmlns:dashboardVm="clr-namespace:maERP.UI.Features.Dashboard.ViewModels"
             xmlns:dashboardViews="clr-namespace:maERP.UI.Features.Dashboard.Views"
             xmlns:importExportVm="clr-namespace:maERP.UI.Features.ImportExport.ViewModels"
             xmlns:importExportViews="clr-namespace:maERP.UI.Features.ImportExport.Views"
             xmlns:customerVm="clr-namespace:maERP.UI.Features.Customers.ViewModels"
             xmlns:customerViews="clr-namespace:maERP.UI.Features.Customers.Views"
             xmlns:orderVm="clr-namespace:maERP.UI.Features.Orders.ViewModels"
             xmlns:orderViews="clr-namespace:maERP.UI.Features.Orders.Views"
             xmlns:invoiceVm="clr-namespace:maERP.UI.Features.Invoices.ViewModels"
             xmlns:invoiceViews="clr-namespace:maERP.UI.Features.Invoices.Views"
             xmlns:productVm="clr-namespace:maERP.UI.Features.Products.ViewModels"
             xmlns:productViews="clr-namespace:maERP.UI.Features.Products.Views"
             xmlns:warehouseVm="clr-namespace:maERP.UI.Features.Warehouses.ViewModels"
             xmlns:warehouseViews="clr-namespace:maERP.UI.Features.Warehouses.Views"
             xmlns:salesChannelVm="clr-namespace:maERP.UI.Features.SalesChannels.ViewModels"
             xmlns:salesChannelViews="clr-namespace:maERP.UI.Features.SalesChannels.Views"
             xmlns:aiVm="clr-namespace:maERP.UI.Features.AI.ViewModels"
             xmlns:aiViews="clr-namespace:maERP.UI.Features.AI.Views"
             xmlns:adminVm="clr-namespace:maERP.UI.Features.Administration.ViewModels"
             xmlns:adminViews="clr-namespace:maERP.UI.Features.Administration.Views"
             xmlns:goodsReceiptVm="clr-namespace:maERP.UI.Features.GoodsReceipts.ViewModels"
             xmlns:goodsReceiptViews="clr-namespace:maERP.UI.Features.GoodsReceipts.Views"
             xmlns:manufacturerVm="clr-namespace:maERP.UI.Features.Manufacturer.ViewModels"
             xmlns:manufacturerViews="clr-namespace:maERP.UI.Features.Manufacturer.Views"
             xmlns:tenantVm="clr-namespace:maERP.UI.Features.Tenants.ViewModels"
             xmlns:tenantViews="clr-namespace:maERP.UI.Features.Tenants.Views"
             mc:Ignorable="d" d:DesignWidth="1200" d:DesignHeight="800"
             x:Class="maERP.UI.Shared.Views.MainView"
             x:DataType="vm:MainViewModel"
             Focusable="True">

  <Grid>
    <!-- Login View wenn nicht authentifiziert -->
    <Panel IsVisible="{Binding !IsAuthenticated}">
      <authViews:LoginView DataContext="{Binding LoginViewModel}"/>
    </Panel>

    <!-- Hauptanwendung mit Sidebar wenn authentifiziert -->
    <Grid IsVisible="{Binding IsAuthenticated}" ColumnDefinitions="260,*">
    
    <!-- Sidebar -->
    <Border Grid.Column="0" 
            Background="{DynamicResource SurfaceContainerBrush}"
            BorderBrush="{DynamicResource OutlineVariantBrush}"
            BorderThickness="0,0,1,0"
            BoxShadow="{DynamicResource ElevationLevel1}">
      
      <DockPanel>
        
        <!-- Logo/Header - docked to top -->
        <Border DockPanel.Dock="Top" 
                Background="{DynamicResource PrimaryBrush}" 
                Padding="20,16" 
                Margin="12,12,12,16"
                CornerRadius="{DynamicResource CornerRadiusM}"
                BoxShadow="{DynamicResource ElevationLevel1}">
          <StackPanel Spacing="2">
            <TextBlock Text="maERP" 
                       FontSize="{DynamicResource FontSizeHeadlineS}" 
                       FontWeight="SemiBold" 
                       Foreground="{DynamicResource OnPrimaryBrush}"
                       HorizontalAlignment="Center"/>
            <TextBlock Text="Enterprise Resource Planning" 
                       FontSize="{DynamicResource FontSizeLabelS}" 
                       Foreground="{DynamicResource OnPrimaryBrush}" 
                       Opacity="0.9"
                       HorizontalAlignment="Center"/>
          </StackPanel>
        </Border>
        
        <!-- Logout Button at bottom - docked to bottom -->
        <Border DockPanel.Dock="Bottom" 
                VerticalAlignment="Bottom" 
                Margin="12,24,12,12">
          <Button Content="🚪 Abmelden"
                  Command="{Binding LogoutCommand}"
                  HorizontalAlignment="Stretch"
                  HorizontalContentAlignment="Left"
                  Padding="16,12"
                  CornerRadius="{DynamicResource CornerRadiusM}"
                  Background="{DynamicResource SurfaceContainerHighBrush}"
                  BorderBrush="{DynamicResource OutlineBrush}"
                  BorderThickness="1"
                  FontSize="{DynamicResource FontSizeBodyS}"/>
        </Border>
        
        <!-- Navigation Menu - scrollable center area -->
        <ScrollViewer VerticalScrollBarVisibility="Auto" 
                      HorizontalScrollBarVisibility="Disabled">
          <StackPanel Margin="12,8">
            
            <!-- Dashboard -->
            <Button Content="📊 Dashboard"
                    Command="{Binding NavigateToMenuItemCommand}"
                    CommandParameter="Dashboard"
                    Classes="nav-button"
                    HorizontalAlignment="Stretch"
                    HorizontalContentAlignment="Left"
                    Padding="16,10"
                    Margin="0,2"
                    CornerRadius="{DynamicResource CornerRadiusS}"/>
            
            <!-- Separators and menu sections -->
            <Rectangle Height="1" 
                       Fill="{DynamicResource OutlineVariantBrush}" 
                       Margin="0,8" 
                       Opacity="0.3"/>
            
            <TextBlock Text="Verkauf" 
                       FontSize="{DynamicResource FontSizeLabelM}" 
                       FontWeight="Medium" 
                       Foreground="{DynamicResource OnSurfaceVariantBrush}" 
                       Margin="16,8,16,4"/>
            
            <Button Content="👥 Kunden"
                    Command="{Binding NavigateToMenuItemCommand}"
                    CommandParameter="Customers"
                    Classes="nav-button"
                    HorizontalAlignment="Stretch"
                    HorizontalContentAlignment="Left"
                    Padding="16,10"
                    Margin="0,2"
                    CornerRadius="{DynamicResource CornerRadiusS}"/>
            
            <Button Content="🛒 Bestellungen"
                    Command="{Binding NavigateToMenuItemCommand}"
                    CommandParameter="Orders"
                    Classes="nav-button"
                    HorizontalAlignment="Stretch"
                    HorizontalContentAlignment="Left"
                    Padding="16,10"
                    Margin="0,2"
                    CornerRadius="{DynamicResource CornerRadiusS}"/>
            
            <Button Content="🧾 Rechnungen"
                    Command="{Binding NavigateToMenuItemCommand}"
                    CommandParameter="Invoices"
                    Classes="nav-button"
                    HorizontalAlignment="Stretch"
                    HorizontalContentAlignment="Left"
                    Padding="16,10"
                    Margin="0,2"
                    CornerRadius="{DynamicResource CornerRadiusS}"/>
            
            <Rectangle Height="1" 
                       Fill="{DynamicResource OutlineVariantBrush}" 
                       Margin="0,8" 
                       Opacity="0.3"/>
            
            <TextBlock Text="Lager" 
                       FontSize="{DynamicResource FontSizeLabelM}" 
                       FontWeight="SemiBold" 
                       Foreground="{DynamicResource OnSurfaceVariantBrush}" 
                       Margin="16,8,16,4"/>
            
            <Button Content="📦 Produkte"
                    Command="{Binding NavigateToMenuItemCommand}"
                    CommandParameter="Products"
                    Classes="nav-button"
                    HorizontalAlignment="Stretch"
                    HorizontalContentAlignment="Left"
                    Padding="16,10"
                    Margin="0,2"
                    CornerRadius="{DynamicResource CornerRadiusS}"/>
            
            <Button Content="🏭 Hersteller"
                    Command="{Binding NavigateToMenuItemCommand}"
                    CommandParameter="Manufacturers"
                    Classes="nav-button"
                    HorizontalAlignment="Stretch"
                    HorizontalContentAlignment="Left"
                    Padding="16,10"
                    Margin="0,2"
                    CornerRadius="{DynamicResource CornerRadiusS}"/>
            
            <Button Content="🏪 Lager"
                    Command="{Binding NavigateToMenuItemCommand}"
                    CommandParameter="Warehouses"
                    Classes="nav-button"
                    HorizontalAlignment="Stretch"
                    HorizontalContentAlignment="Left"
                    Padding="16,10"
                    Margin="0,2"
                    CornerRadius="{DynamicResource CornerRadiusS}"/>
            
            <Button Content="📦📥 Wareneingänge"
                    Command="{Binding NavigateToMenuItemCommand}"
                    CommandParameter="GoodsReceipts"
                    Classes="nav-button"
                    HorizontalAlignment="Stretch"
                    HorizontalContentAlignment="Left"
                    Padding="16,10"
                    Margin="0,2"
                    CornerRadius="{DynamicResource CornerRadiusS}"/>
            
            <Rectangle Height="1" 
                       Fill="{DynamicResource OutlineVariantBrush}" 
                       Margin="0,8" 
                       Opacity="0.3"/>
            
            <TextBlock Text="Vertrieb" 
                       FontSize="{DynamicResource FontSizeLabelM}" 
                       FontWeight="SemiBold" 
                       Foreground="{DynamicResource OnSurfaceVariantBrush}" 
                       Margin="16,8,16,4"/>
            
            <Button Content="🌐 Vertriebskanäle"
                    Command="{Binding NavigateToMenuItemCommand}"
                    CommandParameter="SalesChannels"
                    Classes="nav-button"
                    HorizontalAlignment="Stretch"
                    HorizontalContentAlignment="Left"
                    Padding="16,10"
                    Margin="0,2"
                    CornerRadius="{DynamicResource CornerRadiusS}"/>
            
            <Rectangle Height="1" 
                       Fill="{DynamicResource OutlineVariantBrush}" 
                       Margin="0,8" 
                       Opacity="0.3"/>
            
            <TextBlock Text="System" 
                       FontSize="{DynamicResource FontSizeLabelM}" 
                       FontWeight="SemiBold" 
                       Foreground="{DynamicResource OnSurfaceVariantBrush}" 
                       Margin="16,8,16,4"/>
            
            <Button Content="🤖 AI-Modelle"
                    Command="{Binding NavigateToMenuItemCommand}"
                    CommandParameter="AiModels"
                    Classes="nav-button"
                    HorizontalAlignment="Stretch"
                    HorizontalContentAlignment="Left"
                    Padding="16,10"
                    Margin="0,2"
                    CornerRadius="{DynamicResource CornerRadiusS}"/>
            
            <Button Content="💬 AI-Prompts"
                    Command="{Binding NavigateToMenuItemCommand}"
                    CommandParameter="AiPrompts"
                    Classes="nav-button"
                    HorizontalAlignment="Stretch"
                    HorizontalContentAlignment="Left"
                    Padding="16,10"
                    Margin="0,2"
                    CornerRadius="{DynamicResource CornerRadiusS}"/>
            
            <Button Content="💰 Steuerklassen"
                    Command="{Binding NavigateToMenuItemCommand}"
                    CommandParameter="TaxClasses"
                    Classes="nav-button"
                    HorizontalAlignment="Stretch"
                    HorizontalContentAlignment="Left"
                    Padding="16,10"
                    Margin="0,2"
                    CornerRadius="{DynamicResource CornerRadiusS}"/>
            
            <Button Content="🏢 Tenants"
                    Command="{Binding NavigateToMenuItemCommand}"
                    CommandParameter="Tenants"
                    Classes="nav-button"
                    HorizontalAlignment="Stretch"
                    HorizontalContentAlignment="Left"
                    Padding="16,10"
                    Margin="0,2"
                    CornerRadius="{DynamicResource CornerRadiusM}"
                    IsVisible="{Binding IsSuperAdmin}"/>
            
            <Button Content="👤 Benutzer"
                    Command="{Binding NavigateToMenuItemCommand}"
                    CommandParameter="Users"
                    Classes="nav-button"
                    HorizontalAlignment="Stretch"
                    HorizontalContentAlignment="Left"
                    Padding="16,10"
                    Margin="0,2"
                    CornerRadius="{DynamicResource CornerRadiusS}"/>
            
            <Button Content="📥📤 Import/Export"
                    Command="{Binding NavigateToMenuItemCommand}"
                    CommandParameter="ImportExport"
                    Classes="nav-button"
                    HorizontalAlignment="Stretch"
                    HorizontalContentAlignment="Left"
                    Padding="16,10"
                    Margin="0,2"
                    CornerRadius="{DynamicResource CornerRadiusS}"/>
            
          </StackPanel>
        </ScrollViewer>
        
      </DockPanel>
      
    </Border>
    
    <!-- Main Content Area -->
    <Border Grid.Column="1" 
            Background="{DynamicResource BackgroundBrush}"
            CornerRadius="6,0,0,0"
            Margin="0,6,6,6">
      <ScrollViewer VerticalScrollBarVisibility="Auto" 
                    HorizontalScrollBarVisibility="Disabled"
                    Margin="24">
        <ContentControl Content="{Binding CurrentView}">
          <ContentControl.DataTemplates>
            
            <!-- Authentication -->
            <DataTemplate DataType="{x:Type authVm:LoginViewModel}">
              <authViews:LoginView/>
            </DataTemplate>
            
            <!-- Dashboard -->
            <DataTemplate DataType="{x:Type dashboardVm:DashboardViewModel}">
              <dashboardViews:DashboardView/>
            </DataTemplate>
            
            <!-- Import/Export -->
            <DataTemplate DataType="{x:Type importExportVm:ImportExportOverviewViewModel}">
              <importExportViews:ImportExportOverviewView/>
            </DataTemplate>
            
            <!-- Customers -->
            <DataTemplate DataType="{x:Type customerVm:CustomerListViewModel}">
              <customerViews:CustomerListView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type customerVm:CustomerDetailViewModel}">
              <customerViews:CustomerDetailView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type customerVm:CustomerInputViewModel}">
              <customerViews:CustomerInputView/>
            </DataTemplate>
            
            <!-- Orders -->
            <DataTemplate DataType="{x:Type orderVm:OrderListViewModel}">
              <orderViews:OrderListView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type orderVm:OrderDetailViewModel}">
              <orderViews:OrderDetailView/>
            </DataTemplate>
			<DataTemplate DataType="{x:Type orderVm:OrderInputViewModel}">
			  <orderViews:OrderInputView/>
			</DataTemplate>
            
            <!-- Invoices -->
            <DataTemplate DataType="{x:Type invoiceVm:InvoiceListViewModel}">
              <invoiceViews:InvoiceListView/>
            </DataTemplate>
            
            <!-- Products -->
            <DataTemplate DataType="{x:Type productVm:ProductListViewModel}">
              <productViews:ProductListView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type productVm:ProductDetailViewModel}">
              <productViews:ProductDetailView/>
            </DataTemplate>
			<DataTemplate DataType="{x:Type productVm:ProductInputViewModel}">
			  <productViews:ProductInputView/>
			</DataTemplate>
            
            <!-- Warehouses -->
            <DataTemplate DataType="{x:Type warehouseVm:WarehouseListViewModel}">
              <warehouseViews:WarehouseListView/>
            </DataTemplate>
            
            <!-- Manufacturers -->
            <DataTemplate DataType="{x:Type manufacturerVm:ManufacturerListViewModel}">
              <manufacturerViews:ManufacturerListView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type manufacturerVm:ManufacturerDetailViewModel}">
              <manufacturerViews:ManufacturerDetailView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type manufacturerVm:ManufacturerInputViewModel}">
              <manufacturerViews:ManufacturerInputView/>
            </DataTemplate>
            
            <!-- Warehouses -->
            <DataTemplate DataType="{x:Type warehouseVm:WarehouseDetailViewModel}">
              <warehouseViews:WarehouseDetailView/>
            </DataTemplate>
			<DataTemplate DataType="{x:Type warehouseVm:WarehouseInputViewModel}">
			  <warehouseViews:WarehouseInputView/>
			</DataTemplate>
            
            <!-- Sales Channels -->
            <DataTemplate DataType="{x:Type salesChannelVm:SalesChannelListViewModel}">
              <salesChannelViews:SalesChannelListView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type salesChannelVm:SalesChannelDetailViewModel}">
              <salesChannelViews:SalesChannelDetailView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type salesChannelVm:SalesChannelInputViewModel}">
              <salesChannelViews:SalesChannelInputView/>
            </DataTemplate>
            
            <!-- AI Models -->
            <DataTemplate DataType="{x:Type aiVm:AiModelListViewModel}">
              <aiViews:AiModelListView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type aiVm:AiModelDetailViewModel}">
              <aiViews:AiModelDetailView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type aiVm:AiModelInputViewModel}">
              <aiViews:AiModelInputView/>
            </DataTemplate>
            
            <!-- AI Prompts -->
            <DataTemplate DataType="{x:Type aiVm:AiPromptListViewModel}">
              <aiViews:AiPromptListView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type aiVm:AiPromptDetailViewModel}">
              <aiViews:AiPromptDetailView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type aiVm:AiPromptInputViewModel}">
              <aiViews:AiPromptInputView/>
            </DataTemplate>
            
            <!-- Administration -->
            <DataTemplate DataType="{x:Type adminVm:TaxClassListViewModel}">
              <adminViews:TaxClassListView/>
            </DataTemplate>
			<DataTemplate DataType="{x:Type adminVm:TaxClassDetailViewModel}">
			  <adminViews:TaxClassDetailView/>
			</DataTemplate>
			<DataTemplate DataType="{x:Type adminVm:TaxClassInputViewModel}">
			  <adminViews:TaxClassInputView/>
			</DataTemplate>
            <DataTemplate DataType="{x:Type adminVm:UserListViewModel}">
              <adminViews:UserListView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type adminVm:UserDetailViewModel}">
              <adminViews:UserDetailView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type adminVm:UserInputViewModel}">
              <adminViews:UserInputView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type tenantVm:TenantListViewModel}">
              <tenantViews:TenantListView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type tenantVm:TenantDetailViewModel}">
              <tenantViews:TenantDetailView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type tenantVm:TenantInputViewModel}">
              <tenantViews:TenantInputView/>
            </DataTemplate>
            
            <!-- GoodsReceipts -->
            <DataTemplate DataType="{x:Type goodsReceiptVm:GoodsReceiptListViewModel}">
              <goodsReceiptViews:GoodsReceiptListView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type goodsReceiptVm:GoodsReceiptInputViewModel}">
              <goodsReceiptViews:GoodsReceiptInputView/>
            </DataTemplate>
            
          </ContentControl.DataTemplates>
        </ContentControl>
      </ScrollViewer>
    </Border>
    
    </Grid>
  </Grid>

  <!-- Styles -->
  <UserControl.Styles>
    <Style Selector="Button.nav-button">
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="BorderThickness" Value="0"/>
      <Setter Property="Foreground" Value="{DynamicResource OnSurfaceBrush}"/>
      <Setter Property="FontSize" Value="{DynamicResource FontSizeBodyS}"/>
      <Setter Property="FontWeight" Value="Normal"/>
      <Setter Property="Cursor" Value="Hand"/>
    </Style>
    <Style Selector="Button.nav-button:pointerover">
      <Setter Property="Background" Value="{DynamicResource SecondaryContainerBrush}"/>
      <Setter Property="Foreground" Value="{DynamicResource OnSecondaryContainerBrush}"/>
    </Style>
    <Style Selector="Button.nav-button:pressed">
      <Setter Property="Background" Value="{DynamicResource PrimaryContainerBrush}"/>
      <Setter Property="Foreground" Value="{DynamicResource OnPrimaryContainerBrush}"/>
    </Style>
    <Style Selector="Button.nav-button:focus">
      <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}"/>
      <Setter Property="BorderThickness" Value="1"/>
    </Style>
  </UserControl.Styles>

</UserControl>