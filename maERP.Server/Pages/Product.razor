@page "/Product"
@attribute [Authorize]
@using maERP.Data.Models
@inject maERP.Server.Contracts.IProductsRepository productsRepository

<PageTitle>Produkte</PageTitle>

<h1>Produkte</h1>

@if (products == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-striped align-middle table-bordered">
        <thead>
            <tr>
                <th>SKU</th>
                <th>Name</th>
                <th>Preis</th>
                <th>Steuerklasse</th>
                <th>EAN</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in products)
            {
                <tr>
                    <td>@product.SKU</td>
                    <td>@product.Name</td>
                    <td>@product.Price.ToString("F") EUR</td>
                    <td>@product.TaxClass.</td>
                    <td>@product.EAN</td>
                    <td>
                        <a href='/Product/edit/@product.Id' class="btn btn-outline-dark" role="button">
                            Bearbeiten
                        </a>
                        <a href='/Product/delete/@product.Id' class="btn btn-outline-danger" role="button">
                            Löschen
                        </a>
                    </td>
                </tr>
            }
        </tbody>

    </table>

    <a href="/Product/add">Produkt anlegen</a>
}

@code {

    private List<maERP.Data.Models.Product>? products;

    protected override async Task OnInitializedAsync()
    {
        products = await productsRepository.GetAllAsync();
    }
}