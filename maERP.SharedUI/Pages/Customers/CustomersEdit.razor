@page "/Customers/{customerId:int}/Edit"
@using maERP.SharedUI.Contracts
@using maERP.SharedUI.Models.Customer
@using Microsoft.AspNetCore.Authorization

@attribute [Authorize]

@inject NavigationManager _navigationManager
@inject ICustomerService _customerService

<MudText Typo="Typo.h4" Class="mb-8">Kunde bearbeiten</MudText>

<MudForm Model="@customer" @ref="@_form">
    <MudGrid>
        <MudItem xs="6">

            <MudTextField @bind-Value="customer.FirstName"
                          For="@(() => customer.FirstName)"
                          Label="Lagername"
                          Required="true"
                          Variant="Variant.Text"
                          InputType="InputType.Text"
                          Class="mt-6">
            </MudTextField>

            <MudTextField @bind-Value="customer.LastName"
                          For="@(() => customer.LastName)"
                          Label="Lagername"
                          Required="true"
                          Variant="Variant.Text"
                          InputType="InputType.Text"
                          Class="mt-6">
            </MudTextField>

            <MudButton Variant="Variant.Filled"
                       Color="Color.Primary"
                       Size="Size.Large"
                       ButtonType="ButtonType.Button"
                       OnClick="@(Save)"
                       Class="mt-6">Speichern</MudButton>
        </MudItem>
    </MudGrid>
</MudForm>

@code {

    [Parameter]
    public int customerId { get; set; }

    private MudForm? _form;

    protected string Title = "hinzufügen";

    protected CustomerVM customer = new();

    protected override async Task OnParametersSetAsync()
    {
        if (customerId != 0)
        {
            customer = await _customerService.GetCustomerDetails(customerId);
        }
    }

    protected async Task Save()
    {
        await _customerService.UpdateCustomer(customerId, customer);

        ReturnToList();
    }

    public void ReturnToList()
    {
        StateHasChanged();
        _navigationManager.NavigateTo("/Customers");
    }
}