@page "/Warehouses/Add"
@page "/Warehouses/{warehouseId:int}/Edit"
@using maERP.SharedUI.Contracts
@using maERP.SharedUI.Models.Warehouse
@using Microsoft.AspNetCore.Authorization

@attribute [Authorize]

@inject NavigationManager _navigationManager
@inject IWarehouseService _warehouseService

<MudText Typo="Typo.h4" Class="mb-8">Lager bearbeiten</MudText>

<MudForm Model="@warehouse" @ref="@_form">
    <MudGrid>
        <MudItem xs="6">

            <MudTextField @bind-Value="warehouse.Name"
                          For="@(() => warehouse.Name)"
                          Label="Lagername"
                          Required="true"
                          Variant="Variant.Text"
                          InputType="InputType.Text"
                          Class="mt-6" />

            <MudButton Variant="Variant.Filled"
                       Color="Color.Primary"
                       Size="Size.Large"
                       ButtonType="ButtonType.Button"
                       OnClick="@(Save)"
                       Class="mt-6">Speichern</MudButton>
        </MudItem>
    </MudGrid>
</MudForm>


@code {

    [Parameter]
    public int warehouseId { get; set; }

    MudForm? _form;

    protected string Title = "hinzufügen";

    protected WarehouseVM warehouse = new();

    protected override async Task OnParametersSetAsync()
    {
        if (warehouseId != 0)
        {
            Title = "Bearbeiten";
            warehouse = await _warehouseService.GetWarehouseDetails(warehouseId);
        }
    }

    protected async Task Save()
    {
        if (warehouseId != 0)
        {
            await _warehouseService.UpdateWarehouse(warehouseId, warehouse);
        }
        else
        {
            await _warehouseService.CreateWarehouse(warehouse);
        }

        NavigateToList();
    }

    public void NavigateToList()
    {
        StateHasChanged();
        _navigationManager.NavigateTo("/Warehouses");
    }
}
