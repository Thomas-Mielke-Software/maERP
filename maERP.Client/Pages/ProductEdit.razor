@page "/Product/add"
@page "/Product/edit/{productId:int}"
@using maERP.Shared.Models
@inject NavigationManager NavigationManager

<h1> Produkt</h1>

<hr />

<EditForm Model="@product">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label for="Cellnumber" class="form-label">SKU</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="product.SKU" />
        </div>
    </div>
    <div class="mb-3">
        <label for="Name" class="form-label">Name</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="product.Name" />
        </div>
        <ValidationMessage For="@(() => product.Name)" />
    </div>
    <div class="mb-3">
        <label for="Address" class="form-label">Beschreibung</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="product.Description" />
        </div>
        <ValidationMessage For="@(() => product.Description)" />
    </div>
    <div class="mb-3">
        <label for="Emailid" class="form-label">EAN</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="product.EAN" />
        </div>
        <ValidationMessage For="@(() => product.EAN)" />
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary" @onclick="SaveProduct">Speichern</button>
        <button class="btn btn-light" @onclick="Cancel">Abbrechen</button>
        <a href='/Product/delete/@product.Id' class="btn btn-outline-danger" role="button">
            Löschen
        </a>
    </div>
</EditForm>

@code {

    [Parameter]
    public int productId { get; set; }

    protected string Title = "Add";

    protected maERP.Shared.Models.Product product = new();

    protected override async Task OnParametersSetAsync()
    {
        if (productId != 0)
        {
            Title = "Bearbeiten";
            // product = await productRepository.GetAsync(productId);
        }
    }

    protected async Task SaveProduct()
    {
        if (product.Id != 0)
        {
            // await Http.PutAsJsonAsync("api/User", product);
            // product = await productRepository.GetAsync(productId);
        }
        else
        {
            // await Http.PostAsJsonAsync("api/User", product);
            // product = await productRepository.GetAsync(productId);
        }
        Cancel();
    }

    public void Cancel()
    {
        NavigationManager.NavigateTo("/Product");
    }
}