@page "/login"

@using maERP.Shared.Models;

@inject NavigationManager _navManager
@inject Blazored.LocalStorage.ILocalStorageService _localStorage
@inject maERP.Shared.Contracts.IAuthenticationService _authenticationService

<MudText Typo="Typo.h4" Class="mb-8">maERP</MudText>

<MudForm Model="@_model" @ref="@_form" @bind-IsValid="@_success" ValidationDelay="0">

    <MudText Typo="Typo.h4" GutterBottom="true">Login</MudText>
    @*<MudText>
            Kein Account? <MudLink Href="/pages/authentication/register">Jetzt registrieren</MudLink>
        </MudText>*@
    <MudTextField T="string"
                  @bind-Value="_model.UserName" For="@(() => _model.UserName)"
                  Label="E-Mail"
                  Variant="Variant.Outlined"
                  Required="true"
                  OnlyValidateIfDirty="true"
                  Immediate="true"
                  Class="my-6">
    </MudTextField>

    <MudTextField @bind-Value="_model.Password" For="@(() => _model.Password)"
                  Label="Passwort"
                  Variant="Variant.Outlined"
                  Required="true"
                  InputType="InputType.Password">
    </MudTextField>

    <MudSelect @bind-Value="_model.Server" Label="Server">
        @foreach (var server in _serverList)
        {
            <MudSelectItem Value="@server.Url">@server.Url</MudSelectItem>
        }
    </MudSelect>

    <div Class="d-flex justify-space-between align-center">
        <MudCheckBox For="@(() => _model.RememberMe)" @bind-Checked="_model.RememberMe" Label="Login speichern" Color="Color.Primary" Class="ml-n1 my-3"></MudCheckBox>
        <MudLink Href="/pages/authentication/forgot-password">Passwort vergessen</MudLink>
    </div>

    <MudButton Variant="Variant.Filled"
               Color="Color.Primary"
               Size="Size.Large"
               Disabled="@(_loading)"
               ButtonType="ButtonType.Button"
               OnClick="@(OnSubmit)"
               FullWidth="true">
        @if (_loading)
        {
            <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
            <MudText Class="ms-2">Lädt</MudText>
        }
        else
        {
            <MudText>Login</MudText>
        }

    </MudButton>
</MudForm>


@code
{
    private string _title = "Login";

    MudForm? _form;
    bool _success;
    bool _loading;

    private List<LoginServer> _serverList = new()
    {
        new LoginServer { Id = 1, Url = "https://localhost:8443" }
    };

    private LoginFormModel _model = new()
    {
        UserName = "admin@localhost.com",
        Password = "maERP!12",
        RememberMe = true,
        Server = ""
    };

    private string loginServer = "";
    // private bool _showServerInput = true;
    private string _spinnerClass = string.Empty;
    private string _errorMessage = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        _title = "Login";
    }

    private async void OnSubmit()
    {
        _spinnerClass = "spinner-border spinner-border-sm";

        await _localStorage.SetItemAsStringAsync("server", _model.Server);

        var loginResponse = await _authenticationService.AuthenticateAsync(_model.UserName, _model.Password);

        if (loginResponse == true)
        {
            _navManager.NavigateTo("/");
            return;
        }

        _errorMessage = "Login fehlgeschlagen";
        _spinnerClass = "";

        await _localStorage.RemoveItemAsync("server");

        this.StateHasChanged();
    }
}