@page "/TaxClasses/add"
@page "/TaxClasses/{taxClassId:int}/edit"

@using Microsoft.AspNetCore.Authorization
@using maERP.Shared.Contracts
@using maERP.Shared.Dtos.TaxClass

@attribute [Authorize]

@inject NavigationManager _navManager
@inject IApiDataProvider<TaxClassDetailDto> _apiDataProvider
@inject ISnackbar Snackbar

<h1>Steuersatz</h1>

<hr />

<EditForm Model="@taxClass" OnValidSubmit="Save">
    <DataAnnotationsValidator />

    <MudCard>
        <MudCardContent>
            <MudTextField Label="Steuersatz" HelperText="In Prozent"
                          @bind-Value="taxClass.TaxRate" For="@(() => taxClass.TaxRate)" />
        </MudCardContent>
        <MudCardActions>
            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Speichern</MudButton>
        </MudCardActions>
    </MudCard>
</EditForm>

@code {

    [Parameter]
    public int taxClassId { get; set; }

    protected string Title = "hinzufügen";

    protected TaxClassDetailDto taxClass = new();

    protected override async Task OnParametersSetAsync()
    {
        if (taxClassId != 0)
        {
            Title = "Bearbeiten";
            taxClass = await _apiDataProvider.Request("GET", "/TaxClasses/" + taxClassId);
        }
    }

    protected async Task Save()
    {
        if (taxClassId != 0)
        {
            await _apiDataProvider.Request("PUT", "/TaxClasses/" + taxClassId, taxClass);
        }
        else
        {
            await _apiDataProvider.Request("POST", "/TaxClasses", taxClass);
        }

        Snackbar.Add("Steuerklasse gespeichert", Severity.Success);

        Cancel();
    }

    public void Cancel()
    {
        _navManager.NavigateTo("/TaxClasses");
    }
}