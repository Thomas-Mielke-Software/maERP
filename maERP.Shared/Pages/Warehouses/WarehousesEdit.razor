@page "/Warehouses/add"
@page "/Warehouses/{warehouseId:int}/edit"
@using Microsoft.AspNetCore.Authorization
@using maERP.Shared.Contracts
@using maERP.Shared.Dtos.Warehouse

@attribute [Authorize]

@inject NavigationManager _navigationManager
@inject IDataService<WarehouseUpdateDto> _dataService

<h1>Lager</h1>

<hr />

<EditForm Model="@warehouse" OnValidSubmit="Save">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label for="Name" class="form-label">Name</label>
        <div class="col-md-4">
            <input class="form-control" @bind="warehouse.Name" />
        </div>
        <ValidationMessage For="@(() => warehouse.Name)" />
    </div>
    <div class="form-group">

        @if (warehouseId != 0)
        {
            <a href='/Warehouses/@warehouseId/delete' class="btn btn-outline-danger" role="button">Löschen</a>
        }
        <button class="btn btn-light" @onclick="NavigateToList">Abbrechen</button>
        <button type="submit" class="btn btn-primary">Speichern</button>
    </div>
</EditForm>

@code {

    [Parameter]
    public int warehouseId { get; set; }

    protected string Title = "hinzufügen";

    protected WarehouseUpdateDto warehouse = new();

    protected override async Task OnParametersSetAsync()
    {
        if (warehouseId != 0)
        {
            Title = "Bearbeiten";
            warehouse = await _dataService.Request("GET", "/Warehouses/" + warehouseId);
        }
    }

    protected async Task Save()
    {
        if (warehouseId != 0)
        {
            Console.WriteLine("BEFORE REQUEST");
            await _dataService.Request("PUT", "/Warehouses/" + warehouseId, warehouse);
            Console.WriteLine("AFTER REQUEST");
        }
        else
        {
            await _dataService.Request("POST", "/Warehouses", warehouse);
        }

        NavigateToList();
    }

    public void NavigateToList()
    {
        StateHasChanged();
        _navigationManager.NavigateTo("/Warehouses");
    }
}