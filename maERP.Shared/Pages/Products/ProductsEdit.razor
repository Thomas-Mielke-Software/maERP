@page "/Products/Add"
@page "/Products/{productId:int}/Edit"

@using Microsoft.AspNetCore.Authorization
@using maERP.Shared.Contracts
@using maERP.Shared.Dtos.Product

@attribute [Authorize]

@inject NavigationManager NavManager
@inject IApiDataProvider<ProductDetailDto> _apiDataProvider

@if (product == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <MudText Typo="Typo.h4" Class="mb-8">Produkt bearbeiten</MudText>

    <EditForm Model="@product">
        <DataAnnotationsValidator />
        <div class="mb-3">
            <label for="Cellnumber" class="form-label">SKU</label>
            <div class="col-md-4">
                <InputText class="form-control" @bind-Value="product.Sku" />
            </div>
            <ValidationMessage For="@(() => product.Sku)" />
        </div>
        <div class="mb-3">
            <label for="Name" class="form-label">Name</label>
            <div class="col-md-4">
                <InputText class="form-control" @bind-Value="product.Name" />
            </div>
            <ValidationMessage For="@(() => product.Name)" />
        </div>

        <div class="mb-3">
            <label for="Emailid" class="form-label">EAN</label>
            <div class="col-md-4">
                <InputText class="form-control" @bind-Value="product.Ean" />
            </div>
            <ValidationMessage For="@(() => product.Ean)" />
        </div>
        <div class="form-group">
            <button type="submit" class="btn btn-primary" @onclick="Save">Speichern</button>
            <button class="btn btn-light" @onclick="Cancel">Abbrechen</button>
            <a href='/Products/@productId'/Delete class="btn btn-outline-danger" role="button">
                Löschen
            </a>
        </div>
    </EditForm>
}

@code {

    [Parameter]
    public int productId { get; set; }

    protected string Title = "Add";

    protected ProductDetailDto product = new();

    protected override async Task OnParametersSetAsync()
    {
        if (productId != 0)
        {
            Title = "Bearbeiten";
            product = await _apiDataProvider.Request("GET", "/Products/" + productId);
        }
    }

    protected async Task Save()
    {
        if (productId != 0)
        {
            product = await _apiDataProvider.Request("PUT", "/Products/" + productId, product);
        }
        else
        {
            product = await _apiDataProvider.Request("POST", "/Products/add", product);
        }

        Cancel();
    }

    public void Cancel()
    {
        NavManager.NavigateTo("/Products");
    }
}